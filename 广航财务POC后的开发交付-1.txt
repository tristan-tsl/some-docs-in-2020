按照先后顺序使用这些软件, 因为常常达到某个功能有多种方式, 我们可以反复使用比较, 选择一种比较好用的方式作为rpa的标准执行流程
跨软件之间会存在不稳定性
我们常常会根据在多个软件之间做的事情切割成各自的执行原子功能, 尽可能的将能够沉淀出数据的步骤沉淀出数据(excel), 由于纯编码的形式过于麻烦, 我们常常在业务执行列表编排那些能够尽可能使用独立的可调试指令
需要借助小型数据库(SQLITE3: memory)汇聚多张excel数据进行分析得到业务场景的数据, 为后续RPA操作提供数据支撑
目前在桌面软件数据提取方面没有, 需要研究
由于是手工编码方式:
	找寻控件麻烦, 目前拾取器集成到了设计器中不能单独使用, 且不支持windows桌面软件
		桌面软件的句柄找寻在没有拾取器支持的情况下很麻烦, 甚至无法开展
	持续性开发麻烦:
		即使有pycharm的debug模式的执行代码块的功能可以实现极小部分的

一些意外事情会发生:
	打开目标系统会随机弹出多个目标系统对我们的selenium.driver鼠标焦点窗口进行抢夺焦点, 导致由于窗口的切换造成控件操作的失败, 抛出异常		-- 建行
	目标软件多次异常操作导致软件卡死, 甚至是软件彻底无法使用(需要重启电脑)	-- 疏浚结算中心
	在RPA运行环境的电脑性能不是很好的情况下, 需要对RPA 控件/设备 操作时需要设置缓冲时间
	在拾取器没有支持的很好的情况下, 写IE系统的某些控件的xpath定位值很麻烦
	有时候不容易判断操作目标元素后的状态
	操作一些特殊控件有点麻烦, 例如桌面软件的table水平滚动条
	本来能够正常打开的却打不开
	程序随时会中断, 很多系统混合使用
	由于外部键鼠操作导致RPA原来键鼠操作失败/异常
	日志展示不方便
	频繁操作软件会生成缓存, 概率情况下造成软件不可用
	软件自身的bug导致中断

有概率会发生的事情一定会发生, 只是时间早晚而已
